############################################## MOJE ####################################################################
# spajanie listov
"""pole1 = [1, 2, 4]
pole2 = [2, 3, 6]

res = pole1
res.extend(pole2)
print(pole1)"""

##################################################
# spajanie listov podla indexu
#nums1 = [1,2,4]
#nums2 = [2,3,6]
#res = [1,2,2,3,4,6]

pole1 = [1, 2, 4, 5]
pole2 = [2, 3, 6, 8, 11]

index1 = 0
index2 = 0
result = []
while index1 <= len(pole1) and index2 <= len(pole2):
    if index1 >= len(pole1):
        result.extend(pole2[index2:])                                   # najlepsie riesenie
        #result.extend(pole2[i] for i in range(index2, len(pole2)))     # riesenie list comprehensive

        #for i in range(index2, len(pole2)):                            # zdlhave riesenie
        #    result.append(pole2[i])
        break

    if index2 >= len(pole2):
        result.extend(pole1[index1:])
        break

    if pole1[index1] < pole2[index2]:
        result.append(pole1[index1])
        index1 += 1
    elif pole1[index1] > pole2[index2]:
        result.append(pole2[index2])
        index2 += 1
    else:
        result.append(pole1[index1])
        index1 += 1

print(result)
################################################## MISOVE ################################################################
def merge_nums_arrays(n1, n2):
    i1 = 0
    i2 = 0
    res = []
    while i1 < len(n1) and i2 < len(n2):
        if n1[i1] < n2[i2]:
            res.append(n1[i1])
            i1+=1
        else:
            res.append(n2[i2])
            i2+=1
    if i1 < len(n1):
        res += n1[i1:]
    if i2 < len(n2):
        res += n2[i2:]
    return res

if __name__ == "__main__":
    nums1 = [1,3,4,7,8,11, 18, 19, 20]
    nums2 = [2,3,5,9,16]
    print(merge_nums_arrays(nums1, nums2))

